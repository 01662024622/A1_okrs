<?php

namespace App\Http\Controllers\HT30;

use App\Http\Controllers\Base\ResouceController;
use App\Http\Controllers\Controller;
use App\Models\HT30\Kpi;
use App\Services\HT30\KpiService;
use Illuminate\Http\Request;

class KpiController extends ResouceController
{
    function __construct(KpiService $service)
    {
        $this->middleware('auth');
        parent::__construct($service, array('active' => 'okrs'), '.key');
    }
    public function show($id)
    {
        return Kpi::with('results')->find($id); // TODO: Change the autogenerated stub
    }

    public function store(Request $request)
    {
           $data= parent::storeRequest($request);
        if ($data['level'] == 2) $data['levelEdit']= '<i class="fa fa-square" style="color: green" aria-hidden="true"></i>';
        elseif ($data['level'] == 4) $data['levelEdit']= '<i class="fa fa-square" style="color: yellow" aria-hidden="true"></i>';
        elseif ($data['level'] == 6) $data['levelEdit']= '<i class="fa fa-square" style="color: orange" aria-hidden="true"></i>';
        else $data['levelEdit']= '<i class="fa fa-square" style="color: red" aria-hidden="true"></i>';
        if ($data['type'] == 0) $data['typeEdit']= '%đạt';
        else $data['typeEdit']= 'trừ'.$data['minus'].'%/lỗi';
        return $data;
    }
    public function create(Request $request)
    {
        return Kpi::whereIn('id',$request->kpis)->update(array('status'=>1));
    }
}
