<?php

namespace App\Http\Controllers\HT50;

use App\Http\Controllers\Base\ResouceController;
use App\Models\HT50\HT01Customer;
use App\Models\HT50\InforCustomerSurvey;
use App\Models\HT50\Revenue;
use App\Services\HT50\InforCustomerSurveyService;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class AccumulateController extends ResouceController
{
    function __construct(InforCustomerSurveyService $service)
    {
        parent::__construct($service, array('active' => 'survey', 'group' => 'manager'),'.accumulate');
    }
    public function index()
    {
        $data=Revenue::groupBy('level')->select('level', DB::raw('count(*) as total'))->get();
        $levels=["Total"=>0,"Gold"=>0,"HT"=>0,"Platinum"=>0,"Silver"=>0,"Titan"=>0];
        $total=0;
        foreach ($data as $level){
            $total=$total+$level['total'];
            $levels[$level['level']]=$level['total'];
        }
        $levels["Total"]=$total;
        return parent::index()->with($levels)->with(['role'=>'']); // TODO: Change the autogenerated stub
    }

    public function store(Request $request)
{
    $customer =HT01Customer::where('code',$request->code)->first();
    if ($customer){
        $voucher =InforCustomerSurvey::where('code',$request->code)->first();
        if($voucher) return view('survey.notOver',['voucher'=>$customer->voucher]);
        parent::storeRequest($request);
        return view('survey.over',['voucher'=>$customer->voucher]);
    }
    return view('errors.404');
}
    public function show($id)
{
    if($id=='') return view('errors.404');
    $customer =HT01Customer::where('code',$id)->first();
    if ($customer){
        $voucher =InforCustomerSurvey::where('code',$id)->first();
        if($voucher) return view('survey.notOver',['voucher'=>$customer->voucher]);
        return view('survey.index',['code'=>$customer->code]);
    }
    return view('errors.404');
}
public function edit($id){
    $data=Revenue::groupBy('level')->select('level', DB::raw('count(*) as total'))->where('role_pt',$id)->get();
    $levels=["Total"=>0,"Gold"=>0,"HT"=>0,"Platinum"=>0,"Silver"=>0,"Titan"=>0];
    $total=0;
    foreach ($data as $level){
        $total=$total+$level['total'];
        $levels[$level['level']]=$level['total'];
    }
    $levels["Total"]=$total;
    return view('survey.accumulate')->with($levels)->with(['role'=>$id]);
}
}
